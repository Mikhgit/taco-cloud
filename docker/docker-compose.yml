# docker-compose.yml
version: '3.5'

x-common-variables: &common-variables
  SPRING_CLOUD_CONFIG_TOKEN: root

services:
  taco-service:
    image: 'taco-service:latest'
    depends_on:
      - mongo
      - registry-service
      - keycloak
    build: ../taco-service
    container_name: taco
    environment: 
      *common-variables

  ingredient-service:
    image: 'ingredient-service:latest'
    depends_on:
      - mongo
      - registry-service
      - keycloak
    build: ../ingredient-service
    container_name: ingredient
    environment:
      *common-variables

  order-service:
    image: 'order-service:latest'
    depends_on:
      - mongo
      - registry-service
      - keycloak
      - rabbitmq
    build: ../order-service
    container_name: order
    environment:
      *common-variables

  kitchen-service:
    image: 'kitchen-service:latest'
    depends_on:
      - mongo
      - registry-service
      - keycloak
      - rabbitmq
    build: ../kitchen-service
    container_name: kitchen
    environment:
      *common-variables
    ports:
      - "8081:8080"

  boot-admin-server:
    image: 'boot-admin-server:latest'
    depends_on:
      - registry-service
    hostname: boot-admin-server
    build: ../boot-admin-server
    container_name: boot-admin
    environment:
      *common-variables
    ports:
      - "9000:9000"

  registry-service:
    image: 'registry-service:latest'
    hostname: registry-service
    build: ../registry-service
    container_name: registry
    ports:
      - "8761:8761"

  config-server:
    image: 'config-server:latest'
    hostname: config-server
    build: ../config-server
    container_name: config-server
    ports:
      - "8888:8888"

  api-gateway:
    image: 'api-gateway:latest'
    depends_on:
      - registry-service
    build: ../api-gateway
    container_name: api-gateway
    environment:
      *common-variables
    ports:
      - "8080:8080"

  # Database tier
  mongo:
    image: 'mongo:6.0.2-focal'
    container_name: "mongo"
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    volumes:
      - ./data/db:/data/db # ensures data persistence between restarting
    ports:
      - "27017:27017"
    command: mongod --logpath=/dev/null

  keycloak:
    image: 'jboss/keycloak:16.1.1'
    container_name: "keycloak"
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      DB_VENDOR: h2
    command: ["-Djboss.http.port=8085"]
    ports:
      - "8085:8085"

  rabbitmq:
    image: 'rabbitmq:3.9.27-management-alpine'
    container_name: "rabbitmq"
    ports:
      - "5672:5672"
      - "15672:15672"

  vault:
    image: 'vault:1.12.3'
    container_name: "vault"
    environment:
      VAULT_ADDR: "http://0.0.0.0:8200"
      VAULT_API_ADDR: "http://0.0.0.0:8200"
    cap_add:
      - IPC_LOCK
    ports:
      - "8200:8200"
    entrypoint: vault server -dev -dev-listen-address="0.0.0.0:8200" -dev-root-token-id="root"

  vault-init:
    image: 'vault:1.12.3'
    container_name: "vault-init"
    volumes:
      - ./config/vault-init.sh:/vault-init.sh
    depends_on:
      - vault
    restart: "no"
    entrypoint: sh -c "/vault-init.sh"

  elasticsearch:
    image: 'elasticsearch:7.7.0'
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
    volumes:
      - ./data/elasticsearch:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"

  kibana:
    image: 'kibana:7.7.0'
    container_name: kibana
    environment:
      ELASTICSEARCH_URL: "http://elasticsearch:9300"
    ports:
      - "5601:5601"

  logstash:
    image: 'logstash:7.7.0'
    container_name: logstash
    command: logstash -f /usr/share/logstash/pipeline/logstash.conf
    volumes:
      - ./config:/usr/share/logstash/pipeline
    ports:
      - "9600:9600"

  zipkin:
    image: 'openzipkin/zipkin:2'
    container_name: zipkin
    depends_on:
      - elasticsearch
    environment:
      - STORAGE_TYPE=elasticsearch
      - "ES_HOSTS=elasticsearch:9200"
    ports:
      - "9411:9411"

  prometheus:
    image: prom/prometheus:v2.42.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: "grafana/grafana:9.4.3"
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=root
      - GF_SECURITY_ADMIN_PASSWORD=root
    ports:
      - "3000:3000"

  taco-ui:
    image: 'taco-ui:latest'
    depends_on:
      - keycloak
    build: ../taco-ui
    container_name: taco-ui
    ports:
      - "4200:80"